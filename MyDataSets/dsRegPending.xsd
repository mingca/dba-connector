<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsRegPending" targetNamespace="http://tempuri.org/dsRegPending.xsd" xmlns:mstns="http://tempuri.org/dsRegPending.xsd" xmlns="http://tempuri.org/dsRegPending.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="InfoCtr_beConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="InfoCtr_beConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.InfoCtr.My.MySettings.GlobalReference.Default.InfoCtr_beConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="taRegistrPending" GeneratorDataComponentClassName="taRegistrPending" Name="tblEventRegPending2" UserDataComponentName="taRegistrPending">
            <MainSource>
              <DbSource ConnectionRef="InfoCtr_beConnectionString (MySettings)" DbObjectName="InfoCtr_be.dbo.tblEventRegPending2" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillAll" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataAll" GeneratorSourceName="FillAll" GetMethodModifier="Public" GetMethodName="GetDataAll" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataAll" UserSourceName="FillAll">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM tblEventRegPending2 
WHERE        (SID = @SID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="SID" ColumnName="SID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        SID, OID, UID, EventSKU, dbo.fFormatDate(DateRegister, 'NoTime') AS DateRegister, ISNULL(FirstName, '') + ISNULL(' ' + LastName, ' ') AS Name, Company, Email, 
                         ISNULL(AddressLine1, '') + ISNULL(CASE WHEN AddressLine2 &gt; ' ' THEN CHAR(10) + CHAR(13) + AddressLine2 END, '') + CHAR(10) + CHAR(13) + ISNULL(City, '') 
                         + ISNULL(' ' + State, '') + ISNULL(' ' + Zip, '') AS Address, PrimaryPhone, SecondaryPhone, Notes, SatelliteRegion, MatchEventID, dbo.fFormatDate(MatchFirstDate, 
                         'NoTime') AS FirstDate, CASE WHEN GoesBy &gt; '' THEN '(' + GoesBy + ')' ELSE '' END AS GoesBy, Registrar
FROM            tblEventRegPending2
ORDER BY LastName, FirstName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SatelliteRegion" DataSetColumn="SatelliteRegion" />
              <Mapping SourceColumn="SID" DataSetColumn="SID" />
              <Mapping SourceColumn="EventSKU" DataSetColumn="EventSKU" />
              <Mapping SourceColumn="Company" DataSetColumn="Company" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="PrimaryPhone" DataSetColumn="PrimaryPhone" />
              <Mapping SourceColumn="SecondaryPhone" DataSetColumn="SecondaryPhone" />
              <Mapping SourceColumn="Notes" DataSetColumn="Notes" />
              <Mapping SourceColumn="MatchEventID" DataSetColumn="MatchEventID" />
              <Mapping SourceColumn="OID" DataSetColumn="OID" />
              <Mapping SourceColumn="UID" DataSetColumn="UID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="FirstDate" DataSetColumn="FirstDate" />
              <Mapping SourceColumn="Address" DataSetColumn="Address" />
              <Mapping SourceColumn="DateRegister" DataSetColumn="DateRegister" />
              <Mapping SourceColumn="GoesBy" DataSetColumn="GoesBy" />
              <Mapping SourceColumn="Registrar" DataSetColumn="Registrar" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="InfoCtr_beConnectionString (MySettings)" DbObjectName="InfoCtr_be.dbo.tblEventRegPending" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByEvent" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByEvent" GeneratorSourceName="FillByEvent" GetMethodModifier="Public" GetMethodName="GetDataByEvent" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByEvent" UserSourceName="FillByEvent">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SID, OID, UID, EventSKU, dbo.fFormatDate(DateRegister, 'NoTime') AS DateRegister, ISNULL(FirstName, '') + ISNULL(' ' + LastName, '') AS Name, Company, Email, 
                         ISNULL(AddressLine1, '') + ISNULL(CASE WHEN AddressLine2 &gt; ' ' THEN CHAR(10) + CHAR(13) + AddressLine2 END, '') + CHAR(10) + CHAR(13) + ISNULL(City, '') 
                         + ISNULL(' ' + State, '') + ISNULL(' ' + Zip, '') AS Address, PrimaryPhone, SecondaryPhone, Notes, SatelliteRegion, MatchEventID, dbo.fFormatDate(MatchFirstDate, 
                         'NoTime') AS FirstDate, CASE WHEN GoesBy &gt; '' THEN '(' + GoesBy + ')' ELSE '' END AS GoesBy, Registrar
FROM            tblEventRegPending2
WHERE        (MatchEventID = @EventID)
ORDER BY LastName, FirstName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="EventID" ColumnName="MatchEventID" DataSourceName="InfoCtr_be.dbo.tblEventRegPending2" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EventID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MatchEventID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="InfoCtr_beConnectionString (MySettings)" DbObjectName="InfoCtr_be.dbo.tblEventRegPending" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByOrder" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByOrder" GeneratorSourceName="FillByOrder" GetMethodModifier="Public" GetMethodName="GetDataByOrder" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByOrder" UserSourceName="FillByOrder">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SID, OID, UID, EventSKU, dbo.fFormatDate(DateRegister, 'NoTime') AS DateRegister, ISNULL(FirstName, '') + ISNULL(' ' + LastName, '') AS Name, Company, Email, 
                         ISNULL(AddressLine1, '') + ISNULL(CASE WHEN AddressLine2 &gt; ' ' THEN CHAR(10) + CHAR(13) + AddressLine2 END, '') + CHAR(10) + CHAR(13) + ISNULL(City, '') 
                         + ISNULL(' ' + State, '') + ISNULL(' ' + Zip, '') AS Address, PrimaryPhone, SecondaryPhone, Notes, SatelliteRegion, MatchEventID, dbo.fFormatDate(MatchFirstDate, 
                         'NoTime') AS FirstDate, CASE WHEN GoesBy &gt; '' THEN '(' + GoesBy + ')' ELSE '' END AS GoesBy, Registrar
FROM            tblEventRegPending2
WHERE        (OID = @ID)
ORDER BY LastName, FirstName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="OID" DataSourceName="InfoCtr_be.dbo.tblEventRegPending2" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="OID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="InfoCtr_beConnectionString (MySettings)" DbObjectName="InfoCtr_be.dbo.tblEventRegPending" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRegion" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRegion" GeneratorSourceName="FillByRegion" GetMethodModifier="Public" GetMethodName="GetDataByRegion" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRegion" UserSourceName="FillByRegion">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SID, OID, UID, EventSKU, dbo.fFormatDate(DateRegister, 'NoTime') AS DateRegister, ISNULL(FirstName, '') + ISNULL(' ' + LastName, '') AS Name, Company, Email, 
                         ISNULL(AddressLine1, '') + ISNULL(CASE WHEN AddressLine2 &gt; ' ' THEN CHAR(10) + CHAR(13) + AddressLine2 END, '') + CHAR(10) + CHAR(13) + ISNULL(City, '') 
                         + ISNULL(' ' + State, '') + ISNULL(' ' + Zip, '') AS Address, PrimaryPhone, SecondaryPhone, Notes, SatelliteRegion, MatchEventID, dbo.fFormatDate(MatchFirstDate, 
                         'NoTime') AS FirstDate, CASE WHEN GoesBy &gt; '' THEN '(' + GoesBy + ')' ELSE '' END AS GoesBy, Registrar
FROM            tblEventRegPending2
WHERE        (SatelliteRegion = @Region)
ORDER BY LastName, FirstName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Region" ColumnName="SatelliteRegion" DataSourceName="InfoCtr_be.dbo.tblEventRegPending2" DataTypeServer="varchar(10)" DbType="AnsiString" Direction="Input" ParameterName="@Region" Precision="0" ProviderType="VarChar" Scale="0" Size="10" SourceColumn="SatelliteRegion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsRegPending" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="dsRegPending" msprop:Generator_UserDSName="dsRegPending">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tblEventRegPending2" msprop:Generator_UserTableName="tblEventRegPending2" msprop:Generator_RowEvArgName="tblEventRegPending2RowChangeEvent" msprop:Generator_TableVarName="tabletblEventRegPending2" msprop:Generator_TablePropName="tblEventRegPending2" msprop:Generator_RowDeletingName="tblEventRegPending2RowDeleting" msprop:Generator_RowChangingName="tblEventRegPending2RowChanging" msprop:Generator_RowDeletedName="tblEventRegPending2RowDeleted" msprop:Generator_RowEvHandlerName="tblEventRegPending2RowChangeEventHandler" msprop:Generator_TableClassName="tblEventRegPending2DataTable" msprop:Generator_RowChangedName="tblEventRegPending2RowChanged" msprop:Generator_RowClassName="tblEventRegPending2Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SatelliteRegion" msprop:Generator_ColumnVarNameInTable="columnSatelliteRegion" msprop:Generator_ColumnPropNameInRow="SatelliteRegion" msprop:Generator_ColumnPropNameInTable="SatelliteRegionColumn" msprop:Generator_UserColumnName="SatelliteRegion" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SID" msprop:Generator_ColumnVarNameInTable="columnSID" msprop:Generator_ColumnPropNameInRow="SID" msprop:Generator_ColumnPropNameInTable="SIDColumn" msprop:Generator_UserColumnName="SID" type="xs:int" />
              <xs:element name="EventSKU" msprop:Generator_ColumnVarNameInTable="columnEventSKU" msprop:Generator_ColumnPropNameInRow="EventSKU" msprop:Generator_ColumnPropNameInTable="EventSKUColumn" msprop:Generator_UserColumnName="EventSKU" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Company" msprop:Generator_ColumnVarNameInTable="columnCompany" msprop:Generator_ColumnPropNameInRow="Company" msprop:Generator_ColumnPropNameInTable="CompanyColumn" msprop:Generator_UserColumnName="Company" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PrimaryPhone" msprop:Generator_ColumnVarNameInTable="columnPrimaryPhone" msprop:Generator_ColumnPropNameInRow="PrimaryPhone" msprop:Generator_ColumnPropNameInTable="PrimaryPhoneColumn" msprop:Generator_UserColumnName="PrimaryPhone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SecondaryPhone" msprop:Generator_ColumnVarNameInTable="columnSecondaryPhone" msprop:Generator_ColumnPropNameInRow="SecondaryPhone" msprop:Generator_ColumnPropNameInTable="SecondaryPhoneColumn" msprop:Generator_UserColumnName="SecondaryPhone" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Notes" msprop:Generator_ColumnVarNameInTable="columnNotes" msprop:Generator_ColumnPropNameInRow="Notes" msprop:Generator_ColumnPropNameInTable="NotesColumn" msprop:Generator_UserColumnName="Notes" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="600" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MatchEventID" msprop:Generator_ColumnVarNameInTable="columnMatchEventID" msprop:Generator_ColumnPropNameInRow="MatchEventID" msprop:Generator_ColumnPropNameInTable="MatchEventIDColumn" msprop:Generator_UserColumnName="MatchEventID" type="xs:int" minOccurs="0" />
              <xs:element name="OID" msprop:Generator_ColumnVarNameInTable="columnOID" msprop:Generator_ColumnPropNameInRow="OID" msprop:Generator_ColumnPropNameInTable="OIDColumn" msprop:Generator_UserColumnName="OID" type="xs:int" />
              <xs:element name="UID" msprop:Generator_ColumnVarNameInTable="columnUID" msprop:Generator_ColumnPropNameInRow="UID" msprop:Generator_ColumnPropNameInTable="UIDColumn" msprop:Generator_UserColumnName="UID" type="xs:int" minOccurs="0" />
              <xs:element name="Name" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="101" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FirstDate" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnFirstDate" msprop:Generator_ColumnPropNameInRow="FirstDate" msprop:Generator_ColumnPropNameInTable="FirstDateColumn" msprop:Generator_UserColumnName="FirstDate" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Address" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAddress" msprop:Generator_ColumnPropNameInRow="Address" msprop:Generator_ColumnPropNameInTable="AddressColumn" msprop:Generator_UserColumnName="Address" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DateRegister" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnDateRegister" msprop:Generator_ColumnPropNameInRow="DateRegister" msprop:Generator_ColumnPropNameInTable="DateRegisterColumn" msprop:Generator_UserColumnName="DateRegister" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GoesBy" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnGoesBy" msprop:Generator_ColumnPropNameInRow="GoesBy" msprop:Generator_ColumnPropNameInTable="GoesByColumn" msprop:Generator_UserColumnName="GoesBy" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="52" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Registrar" msprop:Generator_ColumnVarNameInTable="columnRegistrar" msprop:Generator_ColumnPropNameInRow="Registrar" msprop:Generator_ColumnPropNameInTable="RegistrarColumn" msprop:Generator_UserColumnName="Registrar" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblEventRegPending2" />
      <xs:field xpath="mstns:SID" />
    </xs:unique>
  </xs:element>
</xs:schema>